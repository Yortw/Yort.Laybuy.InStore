using System;
using System.Collections.Generic;
using System.Text;
using Newtonsoft.Json;

namespace Yort.Laybuy.InStore
{
	/// <summary>
	/// Provides details about a Laybuy order, returned by <see cref="ILaybuyClient.GetStatus(OrderStatusRequest)"/>.
	/// </summary>
	/// <seealso cref="OrderStatusRequest"/>
	/// <seealso cref="ILaybuyClient.GetStatus(OrderStatusRequest)"/>
	public class OrderStatusResponse : LaybuyApiResponseBase
	{

		private IEnumerable<LaybuyOrderRefund>? _Refunds;

		/// <summary>
		/// The unique id of the order used by Laybuy.
		/// </summary>
		[JsonProperty("orderId")]
		public long OrderId { get; set; }
		/// <summary>
		/// The payment token associated with the order.
		/// </summary>
		[JsonProperty("token")]
		public string? Token { get; set; }
		/// <summary>
		/// The total value of the order.
		/// </summary>
		[JsonProperty("amount")]
		public decimal Amount { get; set; }
		/// <summary>
		/// The currency associated with <see cref="Amount"/>.
		/// </summary>
		[JsonProperty("currency")]
		public string? Currency { get; set; }
		/// <summary>
		/// The unique client reference generated by the merchant to refer to this transaction and help ensure idempotency.
		/// </summary>
		[JsonProperty("merchantReference")]
		public string? MerchantReference { get; set; }
		/// <summary>
		/// The date and time this order was processed, or null if it has not been confirmed.
		/// </summary>
		[JsonProperty("processed")]
		public DateTime? Processed { get; set; }
		/// <summary>
		/// A <see cref="ResponseLaybuyCustomer"/> instance containing details of the customer associated with the order.
		/// </summary>
		[JsonProperty("customer")]
		public ResponseLaybuyCustomer? Customer { get; set; }
		/// <summary>
		/// Gets or sets any refunds previously made against this order.
		/// </summary>
		/// <value>
		/// The refunds.
		/// </value>
		[JsonProperty("refunds")]
		public IEnumerable<LaybuyOrderRefund> Refunds 
		{
			get 
			{
#if NETSTANDARD2_0
				return _Refunds ?? Array.Empty<LaybuyOrderRefund>(); 
#else
				return _Refunds ?? new LaybuyOrderRefund[] { };
#endif
			}
			set 
			{ 
				_Refunds = value; 
			} 
		}
	}
}
