### YamlMime:ManagedReference
items:
- uid: Yort.Laybuy.InStore.OrderResponse
  commentId: T:Yort.Laybuy.InStore.OrderResponse
  id: OrderResponse
  parent: Yort.Laybuy.InStore
  children:
  - Yort.Laybuy.InStore.OrderResponse.Amount
  - Yort.Laybuy.InStore.OrderResponse.Currency
  - Yort.Laybuy.InStore.OrderResponse.Customer
  - Yort.Laybuy.InStore.OrderResponse.MerchantReference
  - Yort.Laybuy.InStore.OrderResponse.OrderId
  - Yort.Laybuy.InStore.OrderResponse.Processed
  - Yort.Laybuy.InStore.OrderResponse.Refunds
  - Yort.Laybuy.InStore.OrderResponse.Token
  langs:
  - csharp
  - vb
  name: OrderResponse
  nameWithType: OrderResponse
  fullName: Yort.Laybuy.InStore.OrderResponse
  type: Class
  source:
    remote:
      path: src/OrderResponse.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: OrderResponse
    path: OrderResponse.cs
    startLine: 12
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nProvides details about a Laybuy order, returned by <xref href=\"Yort.Laybuy.InStore.ILaybuyClient.GetOrder(Yort.Laybuy.InStore.OrderRequest)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class OrderResponse : LaybuyApiResponseBase'
    content.vb: >-
      Public Class OrderResponse
          Inherits LaybuyApiResponseBase
  seealso:
  - linkId: Yort.Laybuy.InStore.OrderRequest
    commentId: T:Yort.Laybuy.InStore.OrderRequest
  - linkId: Yort.Laybuy.InStore.ILaybuyClient.GetOrder(Yort.Laybuy.InStore.OrderRequest)
    commentId: M:Yort.Laybuy.InStore.ILaybuyClient.GetOrder(Yort.Laybuy.InStore.OrderRequest)
  inheritance:
  - System.Object
  - Yort.Laybuy.InStore.LaybuyApiResponseBase
  inheritedMembers:
  - Yort.Laybuy.InStore.LaybuyApiResponseBase.Result
  - Yort.Laybuy.InStore.LaybuyApiResponseBase.Error
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Yort.Laybuy.InStore.OrderResponse.OrderId
  commentId: P:Yort.Laybuy.InStore.OrderResponse.OrderId
  id: OrderId
  parent: Yort.Laybuy.InStore.OrderResponse
  langs:
  - csharp
  - vb
  name: OrderId
  nameWithType: OrderResponse.OrderId
  fullName: Yort.Laybuy.InStore.OrderResponse.OrderId
  type: Property
  source:
    remote:
      path: src/OrderResponse.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: OrderId
    path: OrderResponse.cs
    startLine: 20
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nThe unique id of the order used by Laybuy.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("orderId")]

      public long OrderId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <JsonProperty("orderId")>

      Public Property OrderId As Long
  overload: Yort.Laybuy.InStore.OrderResponse.OrderId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: orderId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Laybuy.InStore.OrderResponse.Token
  commentId: P:Yort.Laybuy.InStore.OrderResponse.Token
  id: Token
  parent: Yort.Laybuy.InStore.OrderResponse
  langs:
  - csharp
  - vb
  name: Token
  nameWithType: OrderResponse.Token
  fullName: Yort.Laybuy.InStore.OrderResponse.Token
  type: Property
  source:
    remote:
      path: src/OrderResponse.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: Token
    path: OrderResponse.cs
    startLine: 25
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nThe payment token associated with the order.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("token")]

      public string Token { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("token")>

      Public Property Token As String
  overload: Yort.Laybuy.InStore.OrderResponse.Token*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: token
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Laybuy.InStore.OrderResponse.Amount
  commentId: P:Yort.Laybuy.InStore.OrderResponse.Amount
  id: Amount
  parent: Yort.Laybuy.InStore.OrderResponse
  langs:
  - csharp
  - vb
  name: Amount
  nameWithType: OrderResponse.Amount
  fullName: Yort.Laybuy.InStore.OrderResponse.Amount
  type: Property
  source:
    remote:
      path: src/OrderResponse.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: Amount
    path: OrderResponse.cs
    startLine: 30
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nThe total value of the order.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("amount")]

      public decimal Amount { get; set; }
    parameters: []
    return:
      type: System.Decimal
    content.vb: >-
      <JsonProperty("amount")>

      Public Property Amount As Decimal
  overload: Yort.Laybuy.InStore.OrderResponse.Amount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: amount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Laybuy.InStore.OrderResponse.Currency
  commentId: P:Yort.Laybuy.InStore.OrderResponse.Currency
  id: Currency
  parent: Yort.Laybuy.InStore.OrderResponse
  langs:
  - csharp
  - vb
  name: Currency
  nameWithType: OrderResponse.Currency
  fullName: Yort.Laybuy.InStore.OrderResponse.Currency
  type: Property
  source:
    remote:
      path: src/OrderResponse.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: Currency
    path: OrderResponse.cs
    startLine: 35
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nThe currency associated with <xref href=\"Yort.Laybuy.InStore.OrderResponse.Amount\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("currency")]

      public string Currency { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("currency")>

      Public Property Currency As String
  overload: Yort.Laybuy.InStore.OrderResponse.Currency*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: currency
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Laybuy.InStore.OrderResponse.MerchantReference
  commentId: P:Yort.Laybuy.InStore.OrderResponse.MerchantReference
  id: MerchantReference
  parent: Yort.Laybuy.InStore.OrderResponse
  langs:
  - csharp
  - vb
  name: MerchantReference
  nameWithType: OrderResponse.MerchantReference
  fullName: Yort.Laybuy.InStore.OrderResponse.MerchantReference
  type: Property
  source:
    remote:
      path: src/OrderResponse.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: MerchantReference
    path: OrderResponse.cs
    startLine: 40
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nThe unique client reference generated by the merchant to refer to this transaction and help ensure idempotency.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("merchantReference")]

      public string MerchantReference { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("merchantReference")>

      Public Property MerchantReference As String
  overload: Yort.Laybuy.InStore.OrderResponse.MerchantReference*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: merchantReference
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Laybuy.InStore.OrderResponse.Processed
  commentId: P:Yort.Laybuy.InStore.OrderResponse.Processed
  id: Processed
  parent: Yort.Laybuy.InStore.OrderResponse
  langs:
  - csharp
  - vb
  name: Processed
  nameWithType: OrderResponse.Processed
  fullName: Yort.Laybuy.InStore.OrderResponse.Processed
  type: Property
  source:
    remote:
      path: src/OrderResponse.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: Processed
    path: OrderResponse.cs
    startLine: 45
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nThe date and time this order was processed, or null if it has not been confirmed.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("processed")]

      public DateTime? Processed { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonProperty("processed")>

      Public Property Processed As Date?
  overload: Yort.Laybuy.InStore.OrderResponse.Processed*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: processed
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Laybuy.InStore.OrderResponse.Customer
  commentId: P:Yort.Laybuy.InStore.OrderResponse.Customer
  id: Customer
  parent: Yort.Laybuy.InStore.OrderResponse
  langs:
  - csharp
  - vb
  name: Customer
  nameWithType: OrderResponse.Customer
  fullName: Yort.Laybuy.InStore.OrderResponse.Customer
  type: Property
  source:
    remote:
      path: src/OrderResponse.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: Customer
    path: OrderResponse.cs
    startLine: 50
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nA <xref href=\"Yort.Laybuy.InStore.ResponseLaybuyCustomer\" data-throw-if-not-resolved=\"false\"></xref> instance containing details of the customer associated with the order.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("customer")]

      public ResponseLaybuyCustomer Customer { get; set; }
    parameters: []
    return:
      type: Yort.Laybuy.InStore.ResponseLaybuyCustomer
    content.vb: >-
      <JsonProperty("customer")>

      Public Property Customer As ResponseLaybuyCustomer
  overload: Yort.Laybuy.InStore.OrderResponse.Customer*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: customer
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Laybuy.InStore.OrderResponse.Refunds
  commentId: P:Yort.Laybuy.InStore.OrderResponse.Refunds
  id: Refunds
  parent: Yort.Laybuy.InStore.OrderResponse
  langs:
  - csharp
  - vb
  name: Refunds
  nameWithType: OrderResponse.Refunds
  fullName: Yort.Laybuy.InStore.OrderResponse.Refunds
  type: Property
  source:
    remote:
      path: src/OrderResponse.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: Refunds
    path: OrderResponse.cs
    startLine: 58
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nGets or sets any refunds previously made against this order.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("refunds")]

      public IEnumerable<LaybuyOrderRefund> Refunds { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Yort.Laybuy.InStore.LaybuyOrderRefund}
      description: "\nThe refunds.\n"
    content.vb: >-
      <JsonProperty("refunds")>

      Public Property Refunds As IEnumerable(Of LaybuyOrderRefund)
  overload: Yort.Laybuy.InStore.OrderResponse.Refunds*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: refunds
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Yort.Laybuy.InStore.ILaybuyClient.GetOrder(Yort.Laybuy.InStore.OrderRequest)
  commentId: M:Yort.Laybuy.InStore.ILaybuyClient.GetOrder(Yort.Laybuy.InStore.OrderRequest)
  parent: Yort.Laybuy.InStore.ILaybuyClient
  name: GetOrder(OrderRequest)
  nameWithType: ILaybuyClient.GetOrder(OrderRequest)
  fullName: Yort.Laybuy.InStore.ILaybuyClient.GetOrder(Yort.Laybuy.InStore.OrderRequest)
  spec.csharp:
  - uid: Yort.Laybuy.InStore.ILaybuyClient.GetOrder(Yort.Laybuy.InStore.OrderRequest)
    name: GetOrder
    nameWithType: ILaybuyClient.GetOrder
    fullName: Yort.Laybuy.InStore.ILaybuyClient.GetOrder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Yort.Laybuy.InStore.OrderRequest
    name: OrderRequest
    nameWithType: OrderRequest
    fullName: Yort.Laybuy.InStore.OrderRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Yort.Laybuy.InStore.ILaybuyClient.GetOrder(Yort.Laybuy.InStore.OrderRequest)
    name: GetOrder
    nameWithType: ILaybuyClient.GetOrder
    fullName: Yort.Laybuy.InStore.ILaybuyClient.GetOrder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Yort.Laybuy.InStore.OrderRequest
    name: OrderRequest
    nameWithType: OrderRequest
    fullName: Yort.Laybuy.InStore.OrderRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Yort.Laybuy.InStore.OrderRequest
  commentId: T:Yort.Laybuy.InStore.OrderRequest
  parent: Yort.Laybuy.InStore
  name: OrderRequest
  nameWithType: OrderRequest
  fullName: Yort.Laybuy.InStore.OrderRequest
- uid: Yort.Laybuy.InStore
  commentId: N:Yort.Laybuy.InStore
  name: Yort.Laybuy.InStore
  nameWithType: Yort.Laybuy.InStore
  fullName: Yort.Laybuy.InStore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Yort.Laybuy.InStore.LaybuyApiResponseBase
  commentId: T:Yort.Laybuy.InStore.LaybuyApiResponseBase
  parent: Yort.Laybuy.InStore
  name: LaybuyApiResponseBase
  nameWithType: LaybuyApiResponseBase
  fullName: Yort.Laybuy.InStore.LaybuyApiResponseBase
- uid: Yort.Laybuy.InStore.LaybuyApiResponseBase.Result
  commentId: P:Yort.Laybuy.InStore.LaybuyApiResponseBase.Result
  parent: Yort.Laybuy.InStore.LaybuyApiResponseBase
  name: Result
  nameWithType: LaybuyApiResponseBase.Result
  fullName: Yort.Laybuy.InStore.LaybuyApiResponseBase.Result
- uid: Yort.Laybuy.InStore.LaybuyApiResponseBase.Error
  commentId: P:Yort.Laybuy.InStore.LaybuyApiResponseBase.Error
  parent: Yort.Laybuy.InStore.LaybuyApiResponseBase
  name: Error
  nameWithType: LaybuyApiResponseBase.Error
  fullName: Yort.Laybuy.InStore.LaybuyApiResponseBase.Error
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Yort.Laybuy.InStore.ILaybuyClient
  commentId: T:Yort.Laybuy.InStore.ILaybuyClient
  parent: Yort.Laybuy.InStore
  name: ILaybuyClient
  nameWithType: ILaybuyClient
  fullName: Yort.Laybuy.InStore.ILaybuyClient
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Yort.Laybuy.InStore.OrderResponse.OrderId*
  commentId: Overload:Yort.Laybuy.InStore.OrderResponse.OrderId
  name: OrderId
  nameWithType: OrderResponse.OrderId
  fullName: Yort.Laybuy.InStore.OrderResponse.OrderId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Yort.Laybuy.InStore.OrderResponse.Token*
  commentId: Overload:Yort.Laybuy.InStore.OrderResponse.Token
  name: Token
  nameWithType: OrderResponse.Token
  fullName: Yort.Laybuy.InStore.OrderResponse.Token
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Yort.Laybuy.InStore.OrderResponse.Amount*
  commentId: Overload:Yort.Laybuy.InStore.OrderResponse.Amount
  name: Amount
  nameWithType: OrderResponse.Amount
  fullName: Yort.Laybuy.InStore.OrderResponse.Amount
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: Yort.Laybuy.InStore.OrderResponse.Amount
  commentId: P:Yort.Laybuy.InStore.OrderResponse.Amount
  isExternal: true
- uid: Yort.Laybuy.InStore.OrderResponse.Currency*
  commentId: Overload:Yort.Laybuy.InStore.OrderResponse.Currency
  name: Currency
  nameWithType: OrderResponse.Currency
  fullName: Yort.Laybuy.InStore.OrderResponse.Currency
- uid: Yort.Laybuy.InStore.OrderResponse.MerchantReference*
  commentId: Overload:Yort.Laybuy.InStore.OrderResponse.MerchantReference
  name: MerchantReference
  nameWithType: OrderResponse.MerchantReference
  fullName: Yort.Laybuy.InStore.OrderResponse.MerchantReference
- uid: Yort.Laybuy.InStore.OrderResponse.Processed*
  commentId: Overload:Yort.Laybuy.InStore.OrderResponse.Processed
  name: Processed
  nameWithType: OrderResponse.Processed
  fullName: Yort.Laybuy.InStore.OrderResponse.Processed
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Yort.Laybuy.InStore.ResponseLaybuyCustomer
  commentId: T:Yort.Laybuy.InStore.ResponseLaybuyCustomer
  parent: Yort.Laybuy.InStore
  name: ResponseLaybuyCustomer
  nameWithType: ResponseLaybuyCustomer
  fullName: Yort.Laybuy.InStore.ResponseLaybuyCustomer
- uid: Yort.Laybuy.InStore.OrderResponse.Customer*
  commentId: Overload:Yort.Laybuy.InStore.OrderResponse.Customer
  name: Customer
  nameWithType: OrderResponse.Customer
  fullName: Yort.Laybuy.InStore.OrderResponse.Customer
- uid: Yort.Laybuy.InStore.OrderResponse.Refunds*
  commentId: Overload:Yort.Laybuy.InStore.OrderResponse.Refunds
  name: Refunds
  nameWithType: OrderResponse.Refunds
  fullName: Yort.Laybuy.InStore.OrderResponse.Refunds
- uid: System.Collections.Generic.IEnumerable{Yort.Laybuy.InStore.LaybuyOrderRefund}
  commentId: T:System.Collections.Generic.IEnumerable{Yort.Laybuy.InStore.LaybuyOrderRefund}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<LaybuyOrderRefund>
  nameWithType: IEnumerable<LaybuyOrderRefund>
  fullName: System.Collections.Generic.IEnumerable<Yort.Laybuy.InStore.LaybuyOrderRefund>
  nameWithType.vb: IEnumerable(Of LaybuyOrderRefund)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Yort.Laybuy.InStore.LaybuyOrderRefund)
  name.vb: IEnumerable(Of LaybuyOrderRefund)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Yort.Laybuy.InStore.LaybuyOrderRefund
    name: LaybuyOrderRefund
    nameWithType: LaybuyOrderRefund
    fullName: Yort.Laybuy.InStore.LaybuyOrderRefund
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Yort.Laybuy.InStore.LaybuyOrderRefund
    name: LaybuyOrderRefund
    nameWithType: LaybuyOrderRefund
    fullName: Yort.Laybuy.InStore.LaybuyOrderRefund
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
