### YamlMime:ManagedReference
items:
- uid: Yort.Laybuy.InStore.LaybuyStatus
  commentId: T:Yort.Laybuy.InStore.LaybuyStatus
  id: LaybuyStatus
  parent: Yort.Laybuy.InStore
  children:
  - Yort.Laybuy.InStore.LaybuyStatus.Cancelled
  - Yort.Laybuy.InStore.LaybuyStatus.Error
  - Yort.Laybuy.InStore.LaybuyStatus.Success
  langs:
  - csharp
  - vb
  name: LaybuyStatus
  nameWithType: LaybuyStatus
  fullName: Yort.Laybuy.InStore.LaybuyStatus
  type: Class
  source:
    remote:
      path: src/LaybuyStatus.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: LaybuyStatus
    path: LaybuyStatus.cs
    startLine: 9
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nProvides various constant values used by/with Laybuy.\n"
  example: []
  syntax:
    content: public static class LaybuyStatus
    content.vb: Public Module LaybuyStatus
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Yort.Laybuy.InStore.LaybuyStatus.Success
  commentId: F:Yort.Laybuy.InStore.LaybuyStatus.Success
  id: Success
  parent: Yort.Laybuy.InStore.LaybuyStatus
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: LaybuyStatus.Success
  fullName: Yort.Laybuy.InStore.LaybuyStatus.Success
  type: Field
  source:
    remote:
      path: src/LaybuyStatus.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: Success
    path: LaybuyStatus.cs
    startLine: 14
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nIndicates a successful call to the Laybuy API (see	<xref href=\"Yort.Laybuy.InStore.LaybuyApiResponseBase.Result\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  example: []
  syntax:
    content: public const string Success = "SUCCESS"
    return:
      type: System.String
    content.vb: Public Const Success As String = "SUCCESS"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Yort.Laybuy.InStore.LaybuyStatus.Error
  commentId: F:Yort.Laybuy.InStore.LaybuyStatus.Error
  id: Error
  parent: Yort.Laybuy.InStore.LaybuyStatus
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: LaybuyStatus.Error
  fullName: Yort.Laybuy.InStore.LaybuyStatus.Error
  type: Field
  source:
    remote:
      path: src/LaybuyStatus.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: Error
    path: LaybuyStatus.cs
    startLine: 18
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nIndicates an unsuccessful call to the Laybuy API (see	<xref href=\"Yort.Laybuy.InStore.LaybuyApiResponseBase.Result\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  example: []
  syntax:
    content: public const string Error = "ERROR"
    return:
      type: System.String
    content.vb: Public Const Error As String = "ERROR"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Yort.Laybuy.InStore.LaybuyStatus.Cancelled
  commentId: F:Yort.Laybuy.InStore.LaybuyStatus.Cancelled
  id: Cancelled
  parent: Yort.Laybuy.InStore.LaybuyStatus
  langs:
  - csharp
  - vb
  name: Cancelled
  nameWithType: LaybuyStatus.Cancelled
  fullName: Yort.Laybuy.InStore.LaybuyStatus.Cancelled
  type: Field
  source:
    remote:
      path: src/LaybuyStatus.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: Cancelled
    path: LaybuyStatus.cs
    startLine: 23
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nIndicates a transaction has been cancelled.\n"
  example: []
  syntax:
    content: public const string Cancelled = "CANCELLED"
    return:
      type: System.String
    content.vb: Public Const Cancelled As String = "CANCELLED"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Yort.Laybuy.InStore
  commentId: N:Yort.Laybuy.InStore
  name: Yort.Laybuy.InStore
  nameWithType: Yort.Laybuy.InStore
  fullName: Yort.Laybuy.InStore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Yort.Laybuy.InStore.LaybuyApiResponseBase.Result
  commentId: P:Yort.Laybuy.InStore.LaybuyApiResponseBase.Result
  parent: Yort.Laybuy.InStore.LaybuyApiResponseBase
  name: Result
  nameWithType: LaybuyApiResponseBase.Result
  fullName: Yort.Laybuy.InStore.LaybuyApiResponseBase.Result
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Yort.Laybuy.InStore.LaybuyApiResponseBase
  commentId: T:Yort.Laybuy.InStore.LaybuyApiResponseBase
  parent: Yort.Laybuy.InStore
  name: LaybuyApiResponseBase
  nameWithType: LaybuyApiResponseBase
  fullName: Yort.Laybuy.InStore.LaybuyApiResponseBase
