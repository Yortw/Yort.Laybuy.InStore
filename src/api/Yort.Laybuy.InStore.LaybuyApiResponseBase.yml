### YamlMime:ManagedReference
items:
- uid: Yort.Laybuy.InStore.LaybuyApiResponseBase
  commentId: T:Yort.Laybuy.InStore.LaybuyApiResponseBase
  id: LaybuyApiResponseBase
  parent: Yort.Laybuy.InStore
  children:
  - Yort.Laybuy.InStore.LaybuyApiResponseBase.Error
  - Yort.Laybuy.InStore.LaybuyApiResponseBase.Result
  langs:
  - csharp
  - vb
  name: LaybuyApiResponseBase
  nameWithType: LaybuyApiResponseBase
  fullName: Yort.Laybuy.InStore.LaybuyApiResponseBase
  type: Class
  source:
    remote:
      path: src/LaybuyApiResponseBase.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: LaybuyApiResponseBase
    path: LaybuyApiResponseBase.cs
    startLine: 10
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nProvides properties for values that (can) appear on all (any) API responses.\n"
  example: []
  syntax:
    content: public abstract class LaybuyApiResponseBase
    content.vb: Public MustInherit Class LaybuyApiResponseBase
  inheritance:
  - System.Object
  derivedClasses:
  - Yort.Laybuy.InStore.CancelOrderResponse
  - Yort.Laybuy.InStore.CreateOrderResponse
  - Yort.Laybuy.InStore.OrderResponse
  - Yort.Laybuy.InStore.OrderStatusResponse
  - Yort.Laybuy.InStore.RefundResponse
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Yort.Laybuy.InStore.LaybuyApiResponseBase.Result
  commentId: P:Yort.Laybuy.InStore.LaybuyApiResponseBase.Result
  id: Result
  parent: Yort.Laybuy.InStore.LaybuyApiResponseBase
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: LaybuyApiResponseBase.Result
  fullName: Yort.Laybuy.InStore.LaybuyApiResponseBase.Result
  type: Property
  source:
    remote:
      path: src/LaybuyApiResponseBase.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: Result
    path: LaybuyApiResponseBase.cs
    startLine: 15
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nThe result of the API call, usually one of the <xref href=\"Yort.Laybuy.InStore.LaybuyStatus\" data-throw-if-not-resolved=\"false\"></xref> for success or failure.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("result")]

      public string Result { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("result")>

      Public Property Result As String
  overload: Yort.Laybuy.InStore.LaybuyApiResponseBase.Result*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: result
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Laybuy.InStore.LaybuyApiResponseBase.Error
  commentId: P:Yort.Laybuy.InStore.LaybuyApiResponseBase.Error
  id: Error
  parent: Yort.Laybuy.InStore.LaybuyApiResponseBase
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: LaybuyApiResponseBase.Error
  fullName: Yort.Laybuy.InStore.LaybuyApiResponseBase.Error
  type: Property
  source:
    remote:
      path: src/LaybuyApiResponseBase.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: Error
    path: LaybuyApiResponseBase.cs
    startLine: 20
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nA human readable description of the error that occurred.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("error")]

      public string Error { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("error")>

      Public Property Error As String
  overload: Yort.Laybuy.InStore.LaybuyApiResponseBase.Error*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: error
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Yort.Laybuy.InStore
  commentId: N:Yort.Laybuy.InStore
  name: Yort.Laybuy.InStore
  nameWithType: Yort.Laybuy.InStore
  fullName: Yort.Laybuy.InStore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Yort.Laybuy.InStore.LaybuyStatus
  commentId: T:Yort.Laybuy.InStore.LaybuyStatus
  name: LaybuyStatus
  nameWithType: LaybuyStatus
  fullName: Yort.Laybuy.InStore.LaybuyStatus
- uid: Yort.Laybuy.InStore.LaybuyApiResponseBase.Result*
  commentId: Overload:Yort.Laybuy.InStore.LaybuyApiResponseBase.Result
  name: Result
  nameWithType: LaybuyApiResponseBase.Result
  fullName: Yort.Laybuy.InStore.LaybuyApiResponseBase.Result
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Yort.Laybuy.InStore.LaybuyApiResponseBase.Error*
  commentId: Overload:Yort.Laybuy.InStore.LaybuyApiResponseBase.Error
  name: Error
  nameWithType: LaybuyApiResponseBase.Error
  fullName: Yort.Laybuy.InStore.LaybuyApiResponseBase.Error
