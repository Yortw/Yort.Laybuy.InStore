### YamlMime:ManagedReference
items:
- uid: Yort.Laybuy.InStore.CreateOrderRequest
  commentId: T:Yort.Laybuy.InStore.CreateOrderRequest
  id: CreateOrderRequest
  parent: Yort.Laybuy.InStore
  children:
  - Yort.Laybuy.InStore.CreateOrderRequest.Amount
  - Yort.Laybuy.InStore.CreateOrderRequest.Currency
  - Yort.Laybuy.InStore.CreateOrderRequest.Customer
  - Yort.Laybuy.InStore.CreateOrderRequest.Items
  - Yort.Laybuy.InStore.CreateOrderRequest.MerchantReference
  - Yort.Laybuy.InStore.CreateOrderRequest.Origin
  - Yort.Laybuy.InStore.CreateOrderRequest.OriginData
  - Yort.Laybuy.InStore.CreateOrderRequest.SetDefaults(Yort.Laybuy.InStore.LaybuyClientConfiguration)
  - Yort.Laybuy.InStore.CreateOrderRequest.Tax
  - Yort.Laybuy.InStore.CreateOrderRequest.Validate
  langs:
  - csharp
  - vb
  name: CreateOrderRequest
  nameWithType: CreateOrderRequest
  fullName: Yort.Laybuy.InStore.CreateOrderRequest
  type: Class
  source:
    remote:
      path: src/CreateOrderRequest.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: CreateOrderRequest
    path: CreateOrderRequest.cs
    startLine: 13
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nContains the values/arguments to the <xref href=\"Yort.Laybuy.InStore.ILaybuyClient.Create(Yort.Laybuy.InStore.CreateOrderRequest)\" data-throw-if-not-resolved=\"false\"></xref> call.\n"
  example: []
  syntax:
    content: 'public class CreateOrderRequest : LaybuyRequestBase'
    content.vb: >-
      Public Class CreateOrderRequest
          Inherits LaybuyRequestBase
  seealso:
  - linkId: Yort.Laybuy.InStore.CreateOrderResponse
    commentId: T:Yort.Laybuy.InStore.CreateOrderResponse
  - linkId: Yort.Laybuy.InStore.ILaybuyClient.Create(Yort.Laybuy.InStore.CreateOrderRequest)
    commentId: M:Yort.Laybuy.InStore.ILaybuyClient.Create(Yort.Laybuy.InStore.CreateOrderRequest)
  inheritance:
  - System.Object
  - Yort.Laybuy.InStore.LaybuyRequestBase
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Yort.Laybuy.InStore.CreateOrderRequest.Amount
  commentId: P:Yort.Laybuy.InStore.CreateOrderRequest.Amount
  id: Amount
  parent: Yort.Laybuy.InStore.CreateOrderRequest
  langs:
  - csharp
  - vb
  name: Amount
  nameWithType: CreateOrderRequest.Amount
  fullName: Yort.Laybuy.InStore.CreateOrderRequest.Amount
  type: Property
  source:
    remote:
      path: src/CreateOrderRequest.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: Amount
    path: CreateOrderRequest.cs
    startLine: 22
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nRequired. The amount of money to request.\n"
  remarks: "\n<p>The total for the customer to pay. This amount is validated against the sum of the amounts in the items attribute.</p>\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("amount")]

      public decimal Amount { get; set; }
    parameters: []
    return:
      type: System.Decimal
    content.vb: >-
      <JsonProperty("amount")>

      Public Property Amount As Decimal
  overload: Yort.Laybuy.InStore.CreateOrderRequest.Amount*
  seealso:
  - linkId: Yort.Laybuy.InStore.CreateOrderRequest.Currency
    commentId: P:Yort.Laybuy.InStore.CreateOrderRequest.Currency
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: amount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Laybuy.InStore.CreateOrderRequest.Tax
  commentId: P:Yort.Laybuy.InStore.CreateOrderRequest.Tax
  id: Tax
  parent: Yort.Laybuy.InStore.CreateOrderRequest
  langs:
  - csharp
  - vb
  name: Tax
  nameWithType: CreateOrderRequest.Tax
  fullName: Yort.Laybuy.InStore.CreateOrderRequest.Tax
  type: Property
  source:
    remote:
      path: src/CreateOrderRequest.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: Tax
    path: CreateOrderRequest.cs
    startLine: 27
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nOptional. The tax included in <xref href=\"Yort.Laybuy.InStore.CreateOrderRequest.Amount\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("tax")]

      public decimal Tax { get; set; }
    parameters: []
    return:
      type: System.Decimal
    content.vb: >-
      <JsonProperty("tax")>

      Public Property Tax As Decimal
  overload: Yort.Laybuy.InStore.CreateOrderRequest.Tax*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: tax
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Laybuy.InStore.CreateOrderRequest.Currency
  commentId: P:Yort.Laybuy.InStore.CreateOrderRequest.Currency
  id: Currency
  parent: Yort.Laybuy.InStore.CreateOrderRequest
  langs:
  - csharp
  - vb
  name: Currency
  nameWithType: CreateOrderRequest.Currency
  fullName: Yort.Laybuy.InStore.CreateOrderRequest.Currency
  type: Property
  source:
    remote:
      path: src/CreateOrderRequest.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: Currency
    path: CreateOrderRequest.cs
    startLine: 36
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nOptional (but recommended). The currency the <xref href=\"Yort.Laybuy.InStore.CreateOrderRequest.Amount\" data-throw-if-not-resolved=\"false\"></xref> is in.\n"
  remarks: "\n<p>If omitted then the default currency associated with the merchant id is used. It is highly recommended a specific currency be provided rather than relying on defaults.</p>\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("currency")]

      public string Currency { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("currency")>

      Public Property Currency As String
  overload: Yort.Laybuy.InStore.CreateOrderRequest.Currency*
  seealso:
  - linkId: Yort.Laybuy.InStore.CreateOrderRequest.Amount
    commentId: P:Yort.Laybuy.InStore.CreateOrderRequest.Amount
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: currency
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Laybuy.InStore.CreateOrderRequest.MerchantReference
  commentId: P:Yort.Laybuy.InStore.CreateOrderRequest.MerchantReference
  id: MerchantReference
  parent: Yort.Laybuy.InStore.CreateOrderRequest
  langs:
  - csharp
  - vb
  name: MerchantReference
  nameWithType: CreateOrderRequest.MerchantReference
  fullName: Yort.Laybuy.InStore.CreateOrderRequest.MerchantReference
  type: Property
  source:
    remote:
      path: src/CreateOrderRequest.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: MerchantReference
    path: CreateOrderRequest.cs
    startLine: 41
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nRequired. A client generated reference for this request, used for idempotency.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("merchantReference")]

      public string MerchantReference { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("merchantReference")>

      Public Property MerchantReference As String
  overload: Yort.Laybuy.InStore.CreateOrderRequest.MerchantReference*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: merchantReference
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Laybuy.InStore.CreateOrderRequest.Origin
  commentId: P:Yort.Laybuy.InStore.CreateOrderRequest.Origin
  id: Origin
  parent: Yort.Laybuy.InStore.CreateOrderRequest
  langs:
  - csharp
  - vb
  name: Origin
  nameWithType: CreateOrderRequest.Origin
  fullName: Yort.Laybuy.InStore.CreateOrderRequest.Origin
  type: Property
  source:
    remote:
      path: src/CreateOrderRequest.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: Origin
    path: CreateOrderRequest.cs
    startLine: 49
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nRequired. A string identifying the calling system. Must be pre-registered with Laybuy.\n"
  remarks: "\n<p>Uses a default of POS if not specified and no default is specified via the <xref href=\"Yort.Laybuy.InStore.LaybuyClientConfiguration.DefaultOrigin\" data-throw-if-not-resolved=\"false\"></xref> value.</p>\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("origin")]

      public string Origin { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("origin")>

      Public Property Origin As String
  overload: Yort.Laybuy.InStore.CreateOrderRequest.Origin*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: origin
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Laybuy.InStore.CreateOrderRequest.OriginData
  commentId: P:Yort.Laybuy.InStore.CreateOrderRequest.OriginData
  id: OriginData
  parent: Yort.Laybuy.InStore.CreateOrderRequest
  langs:
  - csharp
  - vb
  name: OriginData
  nameWithType: CreateOrderRequest.OriginData
  fullName: Yort.Laybuy.InStore.CreateOrderRequest.OriginData
  type: Property
  source:
    remote:
      path: src/CreateOrderRequest.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: OriginData
    path: CreateOrderRequest.cs
    startLine: 55
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nRequired. An object to be serialised as json containing data specific to the <xref href=\"Yort.Laybuy.InStore.CreateOrderRequest.Origin\" data-throw-if-not-resolved=\"false\"></xref> value provided.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("originData")]

      public object OriginData { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: >-
      <JsonProperty("originData")>

      Public Property OriginData As Object
  overload: Yort.Laybuy.InStore.CreateOrderRequest.OriginData*
  seealso:
  - linkId: Yort.Laybuy.InStore.StandardOriginData
    commentId: T:Yort.Laybuy.InStore.StandardOriginData
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: originData
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Laybuy.InStore.CreateOrderRequest.Customer
  commentId: P:Yort.Laybuy.InStore.CreateOrderRequest.Customer
  id: Customer
  parent: Yort.Laybuy.InStore.CreateOrderRequest
  langs:
  - csharp
  - vb
  name: Customer
  nameWithType: CreateOrderRequest.Customer
  fullName: Yort.Laybuy.InStore.CreateOrderRequest.Customer
  type: Property
  source:
    remote:
      path: src/CreateOrderRequest.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: Customer
    path: CreateOrderRequest.cs
    startLine: 63
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nRequired (must provide <xref href=\"Yort.Laybuy.InStore.LaybuyCustomerBase.Phone\" data-throw-if-not-resolved=\"false\"></xref>). Sets or returns a <xref href=\"Yort.Laybuy.InStore.RequestLaybuyCustomer\" data-throw-if-not-resolved=\"false\"></xref> instance representing details of the customer for this request.\n"
  remarks: "\n<p>Requests made by systems for physical stores/branches *must* provide a value for the customer phone number.</p>\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("customer")]

      public RequestLaybuyCustomer Customer { get; set; }
    parameters: []
    return:
      type: Yort.Laybuy.InStore.RequestLaybuyCustomer
    content.vb: >-
      <JsonProperty("customer")>

      Public Property Customer As RequestLaybuyCustomer
  overload: Yort.Laybuy.InStore.CreateOrderRequest.Customer*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: customer
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Laybuy.InStore.CreateOrderRequest.Items
  commentId: P:Yort.Laybuy.InStore.CreateOrderRequest.Items
  id: Items
  parent: Yort.Laybuy.InStore.CreateOrderRequest
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: CreateOrderRequest.Items
  fullName: Yort.Laybuy.InStore.CreateOrderRequest.Items
  type: Property
  source:
    remote:
      path: src/CreateOrderRequest.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: Items
    path: CreateOrderRequest.cs
    startLine: 69
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nOptional. Null or a collection of <xref href=\"Yort.Laybuy.InStore.LaybuyItem\" data-throw-if-not-resolved=\"false\"></xref> objects being purchased. Default value is null.\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("items")]

      public IList<LaybuyItem> Items { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Yort.Laybuy.InStore.LaybuyItem}
    content.vb: >-
      <JsonProperty("items")>

      Public ReadOnly Property Items As IList(Of LaybuyItem)
  overload: Yort.Laybuy.InStore.CreateOrderRequest.Items*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: items
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Yort.Laybuy.InStore.CreateOrderRequest.Validate
  commentId: M:Yort.Laybuy.InStore.CreateOrderRequest.Validate
  id: Validate
  parent: Yort.Laybuy.InStore.CreateOrderRequest
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: CreateOrderRequest.Validate()
  fullName: Yort.Laybuy.InStore.CreateOrderRequest.Validate()
  type: Method
  source:
    remote:
      path: src/CreateOrderRequest.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: Validate
    path: CreateOrderRequest.cs
    startLine: 79
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nValidates the properties for this instance are valid before sending the request to the API.\n"
  remarks: "\nProvides simple client side validation, such as required fields beign provided and fields under maximum lengths etc.\n"
  example: []
  syntax:
    content: protected override void Validate()
    content.vb: Protected Overrides Sub Validate
  overridden: Yort.Laybuy.InStore.LaybuyRequestBase.Validate
  overload: Yort.Laybuy.InStore.CreateOrderRequest.Validate*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Yort.Laybuy.InStore.CreateOrderRequest.SetDefaults(Yort.Laybuy.InStore.LaybuyClientConfiguration)
  commentId: M:Yort.Laybuy.InStore.CreateOrderRequest.SetDefaults(Yort.Laybuy.InStore.LaybuyClientConfiguration)
  id: SetDefaults(Yort.Laybuy.InStore.LaybuyClientConfiguration)
  parent: Yort.Laybuy.InStore.CreateOrderRequest
  langs:
  - csharp
  - vb
  name: SetDefaults(LaybuyClientConfiguration)
  nameWithType: CreateOrderRequest.SetDefaults(LaybuyClientConfiguration)
  fullName: Yort.Laybuy.InStore.CreateOrderRequest.SetDefaults(Yort.Laybuy.InStore.LaybuyClientConfiguration)
  type: Method
  source:
    remote:
      path: src/CreateOrderRequest.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: SetDefaults
    path: CreateOrderRequest.cs
    startLine: 93
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nSets any properties on this object that are null to the appropriate defaults, if possible.\n"
  example: []
  syntax:
    content: protected override void SetDefaults(LaybuyClientConfiguration settings)
    parameters:
    - id: settings
      type: Yort.Laybuy.InStore.LaybuyClientConfiguration
      description: The settings used to construct the <xref href="Yort.Laybuy.InStore.LaybuyClient" data-throw-if-not-resolved="false"></xref> instance that is about to send this request.
    content.vb: Protected Overrides Sub SetDefaults(settings As LaybuyClientConfiguration)
  overridden: Yort.Laybuy.InStore.LaybuyRequestBase.SetDefaults(Yort.Laybuy.InStore.LaybuyClientConfiguration)
  overload: Yort.Laybuy.InStore.CreateOrderRequest.SetDefaults*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Yort.Laybuy.InStore.ILaybuyClient.Create(Yort.Laybuy.InStore.CreateOrderRequest)
  commentId: M:Yort.Laybuy.InStore.ILaybuyClient.Create(Yort.Laybuy.InStore.CreateOrderRequest)
  parent: Yort.Laybuy.InStore.ILaybuyClient
  name: Create(CreateOrderRequest)
  nameWithType: ILaybuyClient.Create(CreateOrderRequest)
  fullName: Yort.Laybuy.InStore.ILaybuyClient.Create(Yort.Laybuy.InStore.CreateOrderRequest)
  spec.csharp:
  - uid: Yort.Laybuy.InStore.ILaybuyClient.Create(Yort.Laybuy.InStore.CreateOrderRequest)
    name: Create
    nameWithType: ILaybuyClient.Create
    fullName: Yort.Laybuy.InStore.ILaybuyClient.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Yort.Laybuy.InStore.CreateOrderRequest
    name: CreateOrderRequest
    nameWithType: CreateOrderRequest
    fullName: Yort.Laybuy.InStore.CreateOrderRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Yort.Laybuy.InStore.ILaybuyClient.Create(Yort.Laybuy.InStore.CreateOrderRequest)
    name: Create
    nameWithType: ILaybuyClient.Create
    fullName: Yort.Laybuy.InStore.ILaybuyClient.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Yort.Laybuy.InStore.CreateOrderRequest
    name: CreateOrderRequest
    nameWithType: CreateOrderRequest
    fullName: Yort.Laybuy.InStore.CreateOrderRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Yort.Laybuy.InStore.CreateOrderResponse
  commentId: T:Yort.Laybuy.InStore.CreateOrderResponse
  name: CreateOrderResponse
  nameWithType: CreateOrderResponse
  fullName: Yort.Laybuy.InStore.CreateOrderResponse
- uid: Yort.Laybuy.InStore
  commentId: N:Yort.Laybuy.InStore
  name: Yort.Laybuy.InStore
  nameWithType: Yort.Laybuy.InStore
  fullName: Yort.Laybuy.InStore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Yort.Laybuy.InStore.LaybuyRequestBase
  commentId: T:Yort.Laybuy.InStore.LaybuyRequestBase
  parent: Yort.Laybuy.InStore
  name: LaybuyRequestBase
  nameWithType: LaybuyRequestBase
  fullName: Yort.Laybuy.InStore.LaybuyRequestBase
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Yort.Laybuy.InStore.ILaybuyClient
  commentId: T:Yort.Laybuy.InStore.ILaybuyClient
  parent: Yort.Laybuy.InStore
  name: ILaybuyClient
  nameWithType: ILaybuyClient
  fullName: Yort.Laybuy.InStore.ILaybuyClient
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Yort.Laybuy.InStore.CreateOrderRequest.Currency
  commentId: P:Yort.Laybuy.InStore.CreateOrderRequest.Currency
  isExternal: true
- uid: Yort.Laybuy.InStore.CreateOrderRequest.Amount*
  commentId: Overload:Yort.Laybuy.InStore.CreateOrderRequest.Amount
  name: Amount
  nameWithType: CreateOrderRequest.Amount
  fullName: Yort.Laybuy.InStore.CreateOrderRequest.Amount
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: Yort.Laybuy.InStore.CreateOrderRequest.Amount
  commentId: P:Yort.Laybuy.InStore.CreateOrderRequest.Amount
  isExternal: true
- uid: Yort.Laybuy.InStore.CreateOrderRequest.Tax*
  commentId: Overload:Yort.Laybuy.InStore.CreateOrderRequest.Tax
  name: Tax
  nameWithType: CreateOrderRequest.Tax
  fullName: Yort.Laybuy.InStore.CreateOrderRequest.Tax
- uid: Yort.Laybuy.InStore.CreateOrderRequest.Currency*
  commentId: Overload:Yort.Laybuy.InStore.CreateOrderRequest.Currency
  name: Currency
  nameWithType: CreateOrderRequest.Currency
  fullName: Yort.Laybuy.InStore.CreateOrderRequest.Currency
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Yort.Laybuy.InStore.CreateOrderRequest.MerchantReference*
  commentId: Overload:Yort.Laybuy.InStore.CreateOrderRequest.MerchantReference
  name: MerchantReference
  nameWithType: CreateOrderRequest.MerchantReference
  fullName: Yort.Laybuy.InStore.CreateOrderRequest.MerchantReference
- uid: Yort.Laybuy.InStore.LaybuyClientConfiguration.DefaultOrigin
  commentId: P:Yort.Laybuy.InStore.LaybuyClientConfiguration.DefaultOrigin
  isExternal: true
- uid: Yort.Laybuy.InStore.CreateOrderRequest.Origin*
  commentId: Overload:Yort.Laybuy.InStore.CreateOrderRequest.Origin
  name: Origin
  nameWithType: CreateOrderRequest.Origin
  fullName: Yort.Laybuy.InStore.CreateOrderRequest.Origin
- uid: Yort.Laybuy.InStore.CreateOrderRequest.Origin
  commentId: P:Yort.Laybuy.InStore.CreateOrderRequest.Origin
  isExternal: true
- uid: Yort.Laybuy.InStore.StandardOriginData
  commentId: T:Yort.Laybuy.InStore.StandardOriginData
  name: StandardOriginData
  nameWithType: StandardOriginData
  fullName: Yort.Laybuy.InStore.StandardOriginData
- uid: Yort.Laybuy.InStore.CreateOrderRequest.OriginData*
  commentId: Overload:Yort.Laybuy.InStore.CreateOrderRequest.OriginData
  name: OriginData
  nameWithType: CreateOrderRequest.OriginData
  fullName: Yort.Laybuy.InStore.CreateOrderRequest.OriginData
- uid: Yort.Laybuy.InStore.LaybuyCustomerBase.Phone
  commentId: P:Yort.Laybuy.InStore.LaybuyCustomerBase.Phone
  parent: Yort.Laybuy.InStore.LaybuyCustomerBase
  name: Phone
  nameWithType: LaybuyCustomerBase.Phone
  fullName: Yort.Laybuy.InStore.LaybuyCustomerBase.Phone
- uid: Yort.Laybuy.InStore.RequestLaybuyCustomer
  commentId: T:Yort.Laybuy.InStore.RequestLaybuyCustomer
  parent: Yort.Laybuy.InStore
  name: RequestLaybuyCustomer
  nameWithType: RequestLaybuyCustomer
  fullName: Yort.Laybuy.InStore.RequestLaybuyCustomer
- uid: Yort.Laybuy.InStore.CreateOrderRequest.Customer*
  commentId: Overload:Yort.Laybuy.InStore.CreateOrderRequest.Customer
  name: Customer
  nameWithType: CreateOrderRequest.Customer
  fullName: Yort.Laybuy.InStore.CreateOrderRequest.Customer
- uid: Yort.Laybuy.InStore.LaybuyCustomerBase
  commentId: T:Yort.Laybuy.InStore.LaybuyCustomerBase
  parent: Yort.Laybuy.InStore
  name: LaybuyCustomerBase
  nameWithType: LaybuyCustomerBase
  fullName: Yort.Laybuy.InStore.LaybuyCustomerBase
- uid: Yort.Laybuy.InStore.LaybuyItem
  commentId: T:Yort.Laybuy.InStore.LaybuyItem
  name: LaybuyItem
  nameWithType: LaybuyItem
  fullName: Yort.Laybuy.InStore.LaybuyItem
- uid: Yort.Laybuy.InStore.CreateOrderRequest.Items*
  commentId: Overload:Yort.Laybuy.InStore.CreateOrderRequest.Items
  name: Items
  nameWithType: CreateOrderRequest.Items
  fullName: Yort.Laybuy.InStore.CreateOrderRequest.Items
- uid: System.Collections.Generic.IList{Yort.Laybuy.InStore.LaybuyItem}
  commentId: T:System.Collections.Generic.IList{Yort.Laybuy.InStore.LaybuyItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<LaybuyItem>
  nameWithType: IList<LaybuyItem>
  fullName: System.Collections.Generic.IList<Yort.Laybuy.InStore.LaybuyItem>
  nameWithType.vb: IList(Of LaybuyItem)
  fullName.vb: System.Collections.Generic.IList(Of Yort.Laybuy.InStore.LaybuyItem)
  name.vb: IList(Of LaybuyItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Yort.Laybuy.InStore.LaybuyItem
    name: LaybuyItem
    nameWithType: LaybuyItem
    fullName: Yort.Laybuy.InStore.LaybuyItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Yort.Laybuy.InStore.LaybuyItem
    name: LaybuyItem
    nameWithType: LaybuyItem
    fullName: Yort.Laybuy.InStore.LaybuyItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Yort.Laybuy.InStore.LaybuyRequestBase.Validate
  commentId: M:Yort.Laybuy.InStore.LaybuyRequestBase.Validate
  parent: Yort.Laybuy.InStore.LaybuyRequestBase
  name: Validate()
  nameWithType: LaybuyRequestBase.Validate()
  fullName: Yort.Laybuy.InStore.LaybuyRequestBase.Validate()
  spec.csharp:
  - uid: Yort.Laybuy.InStore.LaybuyRequestBase.Validate
    name: Validate
    nameWithType: LaybuyRequestBase.Validate
    fullName: Yort.Laybuy.InStore.LaybuyRequestBase.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Yort.Laybuy.InStore.LaybuyRequestBase.Validate
    name: Validate
    nameWithType: LaybuyRequestBase.Validate
    fullName: Yort.Laybuy.InStore.LaybuyRequestBase.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Yort.Laybuy.InStore.CreateOrderRequest.Validate*
  commentId: Overload:Yort.Laybuy.InStore.CreateOrderRequest.Validate
  name: Validate
  nameWithType: CreateOrderRequest.Validate
  fullName: Yort.Laybuy.InStore.CreateOrderRequest.Validate
- uid: Yort.Laybuy.InStore.LaybuyClient
  commentId: T:Yort.Laybuy.InStore.LaybuyClient
  name: LaybuyClient
  nameWithType: LaybuyClient
  fullName: Yort.Laybuy.InStore.LaybuyClient
- uid: Yort.Laybuy.InStore.LaybuyRequestBase.SetDefaults(Yort.Laybuy.InStore.LaybuyClientConfiguration)
  commentId: M:Yort.Laybuy.InStore.LaybuyRequestBase.SetDefaults(Yort.Laybuy.InStore.LaybuyClientConfiguration)
  parent: Yort.Laybuy.InStore.LaybuyRequestBase
  name: SetDefaults(LaybuyClientConfiguration)
  nameWithType: LaybuyRequestBase.SetDefaults(LaybuyClientConfiguration)
  fullName: Yort.Laybuy.InStore.LaybuyRequestBase.SetDefaults(Yort.Laybuy.InStore.LaybuyClientConfiguration)
  spec.csharp:
  - uid: Yort.Laybuy.InStore.LaybuyRequestBase.SetDefaults(Yort.Laybuy.InStore.LaybuyClientConfiguration)
    name: SetDefaults
    nameWithType: LaybuyRequestBase.SetDefaults
    fullName: Yort.Laybuy.InStore.LaybuyRequestBase.SetDefaults
  - name: (
    nameWithType: (
    fullName: (
  - uid: Yort.Laybuy.InStore.LaybuyClientConfiguration
    name: LaybuyClientConfiguration
    nameWithType: LaybuyClientConfiguration
    fullName: Yort.Laybuy.InStore.LaybuyClientConfiguration
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Yort.Laybuy.InStore.LaybuyRequestBase.SetDefaults(Yort.Laybuy.InStore.LaybuyClientConfiguration)
    name: SetDefaults
    nameWithType: LaybuyRequestBase.SetDefaults
    fullName: Yort.Laybuy.InStore.LaybuyRequestBase.SetDefaults
  - name: (
    nameWithType: (
    fullName: (
  - uid: Yort.Laybuy.InStore.LaybuyClientConfiguration
    name: LaybuyClientConfiguration
    nameWithType: LaybuyClientConfiguration
    fullName: Yort.Laybuy.InStore.LaybuyClientConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: Yort.Laybuy.InStore.CreateOrderRequest.SetDefaults*
  commentId: Overload:Yort.Laybuy.InStore.CreateOrderRequest.SetDefaults
  name: SetDefaults
  nameWithType: CreateOrderRequest.SetDefaults
  fullName: Yort.Laybuy.InStore.CreateOrderRequest.SetDefaults
- uid: Yort.Laybuy.InStore.LaybuyClientConfiguration
  commentId: T:Yort.Laybuy.InStore.LaybuyClientConfiguration
  parent: Yort.Laybuy.InStore
  name: LaybuyClientConfiguration
  nameWithType: LaybuyClientConfiguration
  fullName: Yort.Laybuy.InStore.LaybuyClientConfiguration
