### YamlMime:ManagedReference
items:
- uid: Yort.Laybuy.InStore.LaybuyClientConfiguration
  commentId: T:Yort.Laybuy.InStore.LaybuyClientConfiguration
  id: LaybuyClientConfiguration
  parent: Yort.Laybuy.InStore
  children:
  - Yort.Laybuy.InStore.LaybuyClientConfiguration.#ctor(Yort.Laybuy.InStore.LaybuyCredentials)
  - Yort.Laybuy.InStore.LaybuyClientConfiguration.CallbackUrlTemplate
  - Yort.Laybuy.InStore.LaybuyClientConfiguration.Credentials
  - Yort.Laybuy.InStore.LaybuyClientConfiguration.DefaultBranch
  - Yort.Laybuy.InStore.LaybuyClientConfiguration.DefaultOrigin
  - Yort.Laybuy.InStore.LaybuyClientConfiguration.Environment
  - Yort.Laybuy.InStore.LaybuyClientConfiguration.HttpClientFactory
  langs:
  - csharp
  - vb
  name: LaybuyClientConfiguration
  nameWithType: LaybuyClientConfiguration
  fullName: Yort.Laybuy.InStore.LaybuyClientConfiguration
  type: Class
  source:
    remote:
      path: src/LaybuyClientConfiguration.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: LaybuyClientConfiguration
    path: LaybuyClientConfiguration.cs
    startLine: 12
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nProvides configuration settings for <xref href=\"Yort.Laybuy.InStore.ILaybuyClient\" data-throw-if-not-resolved=\"false\"></xref> and default values for some requests..\n"
  example: []
  syntax:
    content: public class LaybuyClientConfiguration
    content.vb: Public Class LaybuyClientConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Yort.Laybuy.InStore.LaybuyClientConfiguration.#ctor(Yort.Laybuy.InStore.LaybuyCredentials)
  commentId: M:Yort.Laybuy.InStore.LaybuyClientConfiguration.#ctor(Yort.Laybuy.InStore.LaybuyCredentials)
  id: '#ctor(Yort.Laybuy.InStore.LaybuyCredentials)'
  parent: Yort.Laybuy.InStore.LaybuyClientConfiguration
  langs:
  - csharp
  - vb
  name: LaybuyClientConfiguration(LaybuyCredentials)
  nameWithType: LaybuyClientConfiguration.LaybuyClientConfiguration(LaybuyCredentials)
  fullName: Yort.Laybuy.InStore.LaybuyClientConfiguration.LaybuyClientConfiguration(Yort.Laybuy.InStore.LaybuyCredentials)
  type: Constructor
  source:
    remote:
      path: src/LaybuyClientConfiguration.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: .ctor
    path: LaybuyClientConfiguration.cs
    startLine: 20
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nDefault constructor.\n"
  example: []
  syntax:
    content: public LaybuyClientConfiguration(LaybuyCredentials credentials)
    parameters:
    - id: credentials
      type: Yort.Laybuy.InStore.LaybuyCredentials
    content.vb: Public Sub New(credentials As LaybuyCredentials)
  overload: Yort.Laybuy.InStore.LaybuyClientConfiguration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Yort.Laybuy.InStore.LaybuyClientConfiguration.Environment
  commentId: P:Yort.Laybuy.InStore.LaybuyClientConfiguration.Environment
  id: Environment
  parent: Yort.Laybuy.InStore.LaybuyClientConfiguration
  langs:
  - csharp
  - vb
  name: Environment
  nameWithType: LaybuyClientConfiguration.Environment
  fullName: Yort.Laybuy.InStore.LaybuyClientConfiguration.Environment
  type: Property
  source:
    remote:
      path: src/LaybuyClientConfiguration.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: Environment
    path: LaybuyClientConfiguration.cs
    startLine: 33
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nGets or sets a value from the <xref href=\"Yort.Laybuy.InStore.LaybuyEnvironment\" data-throw-if-not-resolved=\"false\"></xref> enum specifying whether this client connects to the production or sandboxed (test) Laybuy API.\n"
  remarks: "\n<p>The default value is <xref href=\"Yort.Laybuy.InStore.LaybuyEnvironment.Sandbox\" data-throw-if-not-resolved=\"false\"></xref> to prevent accidental live transactions. Production systems must specify <xref href=\"Yort.Laybuy.InStore.LaybuyEnvironment.Production\" data-throw-if-not-resolved=\"false\"></xref> for real payments to occur.</p>\n"
  example: []
  syntax:
    content: public LaybuyEnvironment Environment { get; set; }
    parameters: []
    return:
      type: Yort.Laybuy.InStore.LaybuyEnvironment
    content.vb: Public Property Environment As LaybuyEnvironment
  overload: Yort.Laybuy.InStore.LaybuyClientConfiguration.Environment*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Laybuy.InStore.LaybuyClientConfiguration.Credentials
  commentId: P:Yort.Laybuy.InStore.LaybuyClientConfiguration.Credentials
  id: Credentials
  parent: Yort.Laybuy.InStore.LaybuyClientConfiguration
  langs:
  - csharp
  - vb
  name: Credentials
  nameWithType: LaybuyClientConfiguration.Credentials
  fullName: Yort.Laybuy.InStore.LaybuyClientConfiguration.Credentials
  type: Property
  source:
    remote:
      path: src/LaybuyClientConfiguration.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: Credentials
    path: LaybuyClientConfiguration.cs
    startLine: 49
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nGets or sets a <xref href=\"Yort.Laybuy.InStore.LaybuyCredentials\" data-throw-if-not-resolved=\"false\"></xref> instance used to authenticate to the Laybuy API.\n"
  example: []
  syntax:
    content: public LaybuyCredentials Credentials { get; }
    parameters: []
    return:
      type: Yort.Laybuy.InStore.LaybuyCredentials
    content.vb: Public ReadOnly Property Credentials As LaybuyCredentials
  overload: Yort.Laybuy.InStore.LaybuyClientConfiguration.Credentials*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Yort.Laybuy.InStore.LaybuyClientConfiguration.CallbackUrlTemplate
  commentId: P:Yort.Laybuy.InStore.LaybuyClientConfiguration.CallbackUrlTemplate
  id: CallbackUrlTemplate
  parent: Yort.Laybuy.InStore.LaybuyClientConfiguration
  langs:
  - csharp
  - vb
  name: CallbackUrlTemplate
  nameWithType: LaybuyClientConfiguration.CallbackUrlTemplate
  fullName: Yort.Laybuy.InStore.LaybuyClientConfiguration.CallbackUrlTemplate
  type: Property
  source:
    remote:
      path: src/LaybuyClientConfiguration.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: CallbackUrlTemplate
    path: LaybuyClientConfiguration.cs
    startLine: 59
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nGets or sets a string containing a template used to automatically generate callback urls for <xref href=\"Yort.Laybuy.InStore.CreateOrderRequest\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n<p>You can use the (case-sensitive) tag {merchantReference} in the template string, it will be replaced with the merchant reference of the request the url is generated for.</p>\n<p>Sample: https://www.mydomain.com/callbacks/laybuy/{merchantReference} </p>\n"
  example: []
  syntax:
    content: public string CallbackUrlTemplate { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CallbackUrlTemplate As String
  overload: Yort.Laybuy.InStore.LaybuyClientConfiguration.CallbackUrlTemplate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Laybuy.InStore.LaybuyClientConfiguration.HttpClientFactory
  commentId: P:Yort.Laybuy.InStore.LaybuyClientConfiguration.HttpClientFactory
  id: HttpClientFactory
  parent: Yort.Laybuy.InStore.LaybuyClientConfiguration
  langs:
  - csharp
  - vb
  name: HttpClientFactory
  nameWithType: LaybuyClientConfiguration.HttpClientFactory
  fullName: Yort.Laybuy.InStore.LaybuyClientConfiguration.HttpClientFactory
  type: Property
  source:
    remote:
      path: src/LaybuyClientConfiguration.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: HttpClientFactory
    path: LaybuyClientConfiguration.cs
    startLine: 65
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nGets or sets a function that create an <xref href=\"System.Net.Http.HttpClient\" data-throw-if-not-resolved=\"false\"></xref> to be used to communicate with Laybuy. Can be null, in which case the system will create it&apos;s own instance.\n"
  example: []
  syntax:
    content: public Func<HttpClient> HttpClientFactory { get; set; }
    parameters: []
    return:
      type: System.Func{System.Net.Http.HttpClient}
    content.vb: Public Property HttpClientFactory As Func(Of HttpClient)
  overload: Yort.Laybuy.InStore.LaybuyClientConfiguration.HttpClientFactory*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Laybuy.InStore.LaybuyClientConfiguration.DefaultOrigin
  commentId: P:Yort.Laybuy.InStore.LaybuyClientConfiguration.DefaultOrigin
  id: DefaultOrigin
  parent: Yort.Laybuy.InStore.LaybuyClientConfiguration
  langs:
  - csharp
  - vb
  name: DefaultOrigin
  nameWithType: LaybuyClientConfiguration.DefaultOrigin
  fullName: Yort.Laybuy.InStore.LaybuyClientConfiguration.DefaultOrigin
  type: Property
  source:
    remote:
      path: src/LaybuyClientConfiguration.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: DefaultOrigin
    path: LaybuyClientConfiguration.cs
    startLine: 73
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nGets or sets the default <xref href=\"Yort.Laybuy.InStore.CreateOrderRequest.Origin\" data-throw-if-not-resolved=\"false\"></xref> value.\n"
  example: []
  syntax:
    content: public string DefaultOrigin { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe default origin.\n"
    content.vb: Public Property DefaultOrigin As String
  overload: Yort.Laybuy.InStore.LaybuyClientConfiguration.DefaultOrigin*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Laybuy.InStore.LaybuyClientConfiguration.DefaultBranch
  commentId: P:Yort.Laybuy.InStore.LaybuyClientConfiguration.DefaultBranch
  id: DefaultBranch
  parent: Yort.Laybuy.InStore.LaybuyClientConfiguration
  langs:
  - csharp
  - vb
  name: DefaultBranch
  nameWithType: LaybuyClientConfiguration.DefaultBranch
  fullName: Yort.Laybuy.InStore.LaybuyClientConfiguration.DefaultBranch
  type: Property
  source:
    remote:
      path: src/LaybuyClientConfiguration.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Laybuy.InStore
    id: DefaultBranch
    path: LaybuyClientConfiguration.cs
    startLine: 81
  assemblies:
  - Yort.Laybuy.InStore
  namespace: Yort.Laybuy.InStore
  summary: "\nGets or sets the default value for <xref href=\"Yort.Laybuy.InStore.StandardOriginData.Branch\" data-throw-if-not-resolved=\"false\"></xref> which is applied if no origin data is specified on a <xref href=\"Yort.Laybuy.InStore.CreateOrderRequest\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public string DefaultBranch { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe default branch identifier (usually name).\n"
    content.vb: Public Property DefaultBranch As String
  overload: Yort.Laybuy.InStore.LaybuyClientConfiguration.DefaultBranch*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Yort.Laybuy.InStore.ILaybuyClient
  commentId: T:Yort.Laybuy.InStore.ILaybuyClient
  parent: Yort.Laybuy.InStore
  name: ILaybuyClient
  nameWithType: ILaybuyClient
  fullName: Yort.Laybuy.InStore.ILaybuyClient
- uid: Yort.Laybuy.InStore
  commentId: N:Yort.Laybuy.InStore
  name: Yort.Laybuy.InStore
  nameWithType: Yort.Laybuy.InStore
  fullName: Yort.Laybuy.InStore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Yort.Laybuy.InStore.LaybuyClientConfiguration.#ctor*
  commentId: Overload:Yort.Laybuy.InStore.LaybuyClientConfiguration.#ctor
  name: LaybuyClientConfiguration
  nameWithType: LaybuyClientConfiguration.LaybuyClientConfiguration
  fullName: Yort.Laybuy.InStore.LaybuyClientConfiguration.LaybuyClientConfiguration
- uid: Yort.Laybuy.InStore.LaybuyCredentials
  commentId: T:Yort.Laybuy.InStore.LaybuyCredentials
  parent: Yort.Laybuy.InStore
  name: LaybuyCredentials
  nameWithType: LaybuyCredentials
  fullName: Yort.Laybuy.InStore.LaybuyCredentials
- uid: Yort.Laybuy.InStore.LaybuyEnvironment
  commentId: T:Yort.Laybuy.InStore.LaybuyEnvironment
  parent: Yort.Laybuy.InStore
  name: LaybuyEnvironment
  nameWithType: LaybuyEnvironment
  fullName: Yort.Laybuy.InStore.LaybuyEnvironment
- uid: Yort.Laybuy.InStore.LaybuyEnvironment.Sandbox
  commentId: F:Yort.Laybuy.InStore.LaybuyEnvironment.Sandbox
  isExternal: true
- uid: Yort.Laybuy.InStore.LaybuyEnvironment.Production
  commentId: F:Yort.Laybuy.InStore.LaybuyEnvironment.Production
  isExternal: true
- uid: Yort.Laybuy.InStore.LaybuyClientConfiguration.Environment*
  commentId: Overload:Yort.Laybuy.InStore.LaybuyClientConfiguration.Environment
  name: Environment
  nameWithType: LaybuyClientConfiguration.Environment
  fullName: Yort.Laybuy.InStore.LaybuyClientConfiguration.Environment
- uid: Yort.Laybuy.InStore.LaybuyClientConfiguration.Credentials*
  commentId: Overload:Yort.Laybuy.InStore.LaybuyClientConfiguration.Credentials
  name: Credentials
  nameWithType: LaybuyClientConfiguration.Credentials
  fullName: Yort.Laybuy.InStore.LaybuyClientConfiguration.Credentials
- uid: Yort.Laybuy.InStore.CreateOrderRequest
  commentId: T:Yort.Laybuy.InStore.CreateOrderRequest
  parent: Yort.Laybuy.InStore
  name: CreateOrderRequest
  nameWithType: CreateOrderRequest
  fullName: Yort.Laybuy.InStore.CreateOrderRequest
- uid: Yort.Laybuy.InStore.LaybuyClientConfiguration.CallbackUrlTemplate*
  commentId: Overload:Yort.Laybuy.InStore.LaybuyClientConfiguration.CallbackUrlTemplate
  name: CallbackUrlTemplate
  nameWithType: LaybuyClientConfiguration.CallbackUrlTemplate
  fullName: Yort.Laybuy.InStore.LaybuyClientConfiguration.CallbackUrlTemplate
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  isExternal: true
- uid: Yort.Laybuy.InStore.LaybuyClientConfiguration.HttpClientFactory*
  commentId: Overload:Yort.Laybuy.InStore.LaybuyClientConfiguration.HttpClientFactory
  name: HttpClientFactory
  nameWithType: LaybuyClientConfiguration.HttpClientFactory
  fullName: Yort.Laybuy.InStore.LaybuyClientConfiguration.HttpClientFactory
- uid: System.Func{System.Net.Http.HttpClient}
  commentId: T:System.Func{System.Net.Http.HttpClient}
  parent: System
  definition: System.Func`1
  name: Func<HttpClient>
  nameWithType: Func<HttpClient>
  fullName: System.Func<System.Net.Http.HttpClient>
  nameWithType.vb: Func(Of HttpClient)
  fullName.vb: System.Func(Of System.Net.Http.HttpClient)
  name.vb: Func(Of HttpClient)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpClient
    name: HttpClient
    nameWithType: HttpClient
    fullName: System.Net.Http.HttpClient
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Net.Http.HttpClient
    name: HttpClient
    nameWithType: HttpClient
    fullName: System.Net.Http.HttpClient
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Yort.Laybuy.InStore.CreateOrderRequest.Origin
  commentId: P:Yort.Laybuy.InStore.CreateOrderRequest.Origin
  isExternal: true
- uid: Yort.Laybuy.InStore.LaybuyClientConfiguration.DefaultOrigin*
  commentId: Overload:Yort.Laybuy.InStore.LaybuyClientConfiguration.DefaultOrigin
  name: DefaultOrigin
  nameWithType: LaybuyClientConfiguration.DefaultOrigin
  fullName: Yort.Laybuy.InStore.LaybuyClientConfiguration.DefaultOrigin
- uid: Yort.Laybuy.InStore.StandardOriginData.Branch
  commentId: P:Yort.Laybuy.InStore.StandardOriginData.Branch
  isExternal: true
- uid: Yort.Laybuy.InStore.LaybuyClientConfiguration.DefaultBranch*
  commentId: Overload:Yort.Laybuy.InStore.LaybuyClientConfiguration.DefaultBranch
  name: DefaultBranch
  nameWithType: LaybuyClientConfiguration.DefaultBranch
  fullName: Yort.Laybuy.InStore.LaybuyClientConfiguration.DefaultBranch
